# .github/workflows/build-microsocks-uclibc.yml

name: Build microsocks for MT7621 (uClibc)

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
  workflow_dispatch: # Allows you to run this workflow manually from the Actions tab

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      # OpenWrt Chaos Calmer 15.05.1 SDK for mt7621 (uses uClibc)
      SDK_URL: https://archive.openwrt.org/chaos_calmer/15.05.1/ramips/mt7621/OpenWrt-SDK-15.05.1-ramips-mt7621_for-linux-x86_64.tar.bz2
      ARTIFACT_NAME: microsocks-ipk-mt7621-uclibc

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libncurses5-dev gawk git libssl-dev \
            gettext zlib1g-dev swig unzip time rsync python3 subversion wget curl \
            bzip2 xz-utils file

      - name: Download and extract OpenWrt SDK
        run: |
          wget -O openwrt-sdk.tar.bz2 "${{ env.SDK_URL }}"
          tar -xjf openwrt-sdk.tar.bz2
          SDK_DIR=$(find . -maxdepth 1 -type d -name "OpenWrt-SDK*")
          mv "$SDK_DIR" openwrt-sdk
          echo "SDK extracted and renamed to 'openwrt-sdk'"

      - name: Prepare OpenWrt package structure from source
        run: |
          # 1. Create the required directory structure inside the SDK
          mkdir -p openwrt-sdk/package/microsocks/src
          mkdir -p openwrt-sdk/package/microsocks/files

          # 2. Copy only the necessary source files from your repo's 'microsocks' dir
          #    to the 'src' directory the OpenWrt Makefile expects.
          cp ./microsocks/*.c ./microsocks/*.h ./microsocks/COPYING ./microsocks/Makefile openwrt-sdk/package/microsocks/src/
          echo "Source files copied to package/microsocks/src/"
          ls -l openwrt-sdk/package/microsocks/src/
          
      - name: Create init script and config files
        run: |
          # 3. Dynamically create the init.d script
          cat > openwrt-sdk/package/microsocks/files/microsocks.init << 'EOF'
          #!/bin/sh /etc/rc.common

          START=90
          STOP=10

          USE_PROCD=1
          PROG=/usr/bin/microsocks

          start_service() {
              . /lib/functions.sh
              config_load microsocks
              
              local enabled port user auth_user auth_pass bind_addr
              
              config_get_bool enabled config enabled 0
              [ "$enabled" -eq 0 ] && return
              
              config_get port config port 1080
              config_get user config user nobody
              config_get auth_user config auth_user
              config_get auth_pass config auth_pass
              config_get bind_addr config bind_addr 0.0.0.0
              
              procd_open_instance
              procd_set_param command $PROG -i $bind_addr -p $port
              
              # IMPORTANT: Use the specified user to run the process for security
              procd_set_param user "$user"
              
              [ -n "$auth_user" ] && [ -n "$auth_pass" ] && {
                  procd_append_param command -u "$auth_user"
                  procd_append_param command -P "$auth_pass"
              }
              
              procd_set_param respawn
              procd_close_instance
          }
          EOF
          chmod +x openwrt-sdk/package/microsocks/files/microsocks.init
          echo "init.d script created."

          # 4. Dynamically create the UCI config file
          cat > openwrt-sdk/package/microsocks/files/microsocks.config << 'EOF'
          config microsocks 'config'
              option enabled '0'
              option port '1080'
              option user 'nobody'
              option bind_addr '0.0.0.0'
              # To enable authentication, uncomment and set the following lines:
              # option auth_user 'myuser'
              # option auth_pass 'mypassword'
          EOF
          echo "UCI config file created."

      - name: Create OpenWrt Makefile for the package
        run: |
          cat > openwrt-sdk/package/microsocks/Makefile << 'EOF'
          include $(TOPDIR)/rules.mk

          PKG_NAME:=microsocks
          PKG_VERSION:=1.0.5 # Match this to the source version if needed
          PKG_RELEASE:=2 # Incremented release for new build script

          PKG_LICENSE:=MIT
          PKG_MAINTAINER:=Your Name <your@email.com>

          # This tells OpenWrt to use the local files we just prepared
          PKG_BUILD_DIR:=$(BUILD_DIR)/$(PKG_NAME)-$(PKG_VERSION)

          include $(INCLUDE_DIR)/package.mk

          define Package/microsocks
            SECTION:=net
            CATEGORY:=Network
            TITLE:=Tiny, portable SOCKS5 server
            URL:=https://github.com/rofl0r/microsocks
            DEPENDS:=+libpthread
          endef

          define Package/microsocks/description
            Microsocks is a tiny, portable SOCKS5 server with very moderate
            resource usage for embedded devices.
          endef

          # Copy the source files from ./src/ (inside the package dir) to the final build dir
          define Build/Prepare
          	mkdir -p $(PKG_BUILD_DIR)
          	$(CP) ./src/* $(PKG_BUILD_DIR)/
          endef

          # This uses the original Makefile from the microsocks source code
          define Build/Compile
          	$(MAKE) -C $(PKG_BUILD_DIR) \
          		CC="$(TARGET_CC)" \
          		CFLAGS="$(TARGET_CFLAGS) $(TARGET_CPPFLAGS) -std=c99" \
          		LDFLAGS="$(TARGET_LDFLAGS)" \
          		all
          endef

          # Install the compiled binary and the config/init files
          define Package/microsocks/install
          	$(INSTALL_DIR) $(1)/usr/bin
          	$(INSTALL_BIN) $(PKG_BUILD_DIR)/microsocks $(1)/usr/bin/
          	$(INSTALL_DIR) $(1)/etc/init.d
          	$(INSTALL_BIN) ./files/microsocks.init $(1)/etc/init.d/microsocks
          	$(INSTALL_DIR) $(1)/etc/config
          	$(INSTALL_CONF) ./files/microsocks.config $(1)/etc/config/microsocks
          endef

          $(eval $(call BuildPackage,microsocks))
          EOF

      - name: Compile the package
        run: |
          cd openwrt-sdk
          make package/microsocks/compile V=s

      - name: Collect IPK artifact
        run: |
          mkdir -p artifacts
          find openwrt-sdk/bin -name "microsocks*.ipk" -exec cp {} artifacts/ \;
          echo "IPK files found:"
          ls -lh artifacts/
          if [ -z "$(ls -A artifacts/)" ]; then
              echo "Error: No IPK files were found after compilation!"
              exit 1
          fi

      - name: Upload IPK artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: artifacts/*.ipk
          if-no-files-found: error
