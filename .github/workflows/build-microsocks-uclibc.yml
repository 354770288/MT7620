name: Build Microsocks IPK for OpenWrt

on:
  push:
    branches:
      - main
      - master
    paths:
      - 'microsocks/**'
      - '.github/workflows/build-microsocks-ipk.yml'
  pull_request:
    branches:
      - main
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libncurses5-dev gawk git libssl-dev gettext unzip zlib1g-dev file python3

      - name: Download OpenWrt SDK
        run: |
          wget https://archive.openwrt.org/chaos_calmer/15.05.1/ramips/mt7621/OpenWrt-SDK-15.05.1-ramips-mt7621_gcc-4.8-linaro_uClibc-0.9.33.2.Linux-x86_64.tar.bz2
          tar -xjf OpenWrt-SDK-15.05.1-ramips-mt7621_gcc-4.8-linaro_uClibc-0.9.33.2.Linux-x86_64.tar.bz2
          mv OpenWrt-SDK-15.05.1-ramips-mt7621_gcc-4.8-linaro_uClibc-0.9.33.2.Linux-x86_64 openwrt-sdk

      - name: Prepare microsocks package
        run: |
          mkdir -p openwrt-sdk/package/microsocks
          
          # Create Makefile for OpenWrt package
          cat > openwrt-sdk/package/microsocks/Makefile << 'EOF'
          include $(TOPDIR)/rules.mk

          PKG_NAME:=microsocks
          PKG_VERSION:=1.0.3
          PKG_RELEASE:=1

          PKG_BUILD_DIR:=$(BUILD_DIR)/$(PKG_NAME)-$(PKG_VERSION)

          include $(INCLUDE_DIR)/package.mk

          define Package/microsocks
            SECTION:=net
            CATEGORY:=Network
            TITLE:=Tiny SOCKS5 proxy server
            URL:=https://github.com/rofl0r/microsocks
            DEPENDS:=+libpthread
          endef

          define Package/microsocks/description
            Microsocks is a tiny, portable SOCKS5 server with very moderate resource usage.
            It supports authentication and is ideal for embedded systems.
          endef

          define Build/Prepare
          	mkdir -p $(PKG_BUILD_DIR)
          	$(CP) $(TOPDIR)/../microsocks/* $(PKG_BUILD_DIR)/
          endef

          define Build/Compile
          	$(MAKE) -C $(PKG_BUILD_DIR) \
          		CC="$(TARGET_CC)" \
          		CFLAGS="$(TARGET_CFLAGS) -std=c99" \
          		LDFLAGS="$(TARGET_LDFLAGS) -lpthread" \
          		all
          endef

          define Package/microsocks/install
          	$(INSTALL_DIR) $(1)/usr/bin
          	$(INSTALL_BIN) $(PKG_BUILD_DIR)/microsocks $(1)/usr/bin/
          	$(INSTALL_DIR) $(1)/etc/init.d
          	$(INSTALL_BIN) ./files/microsocks.init $(1)/etc/init.d/microsocks
          	$(INSTALL_DIR) $(1)/etc/config
          	$(INSTALL_CONF) ./files/microsocks.config $(1)/etc/config/microsocks
          endef

          $(eval $(call BuildPackage,microsocks))
          EOF

      - name: Create init script
        run: |
          mkdir -p openwrt-sdk/package/microsocks/files
          
          cat > openwrt-sdk/package/microsocks/files/microsocks.init << 'EOF'
          #!/bin/sh /etc/rc.common

          START=99
          STOP=10

          USE_PROCD=1
          PROG=/usr/bin/microsocks

          start_service() {
          	config_load microsocks
          	
          	local enabled
          	local port
          	local bind_addr
          	local user
          	local pass
          	
          	config_get enabled config enabled 0
          	config_get port config port 1080
          	config_get bind_addr config bind_addr "0.0.0.0"
          	config_get user config user ""
          	config_get pass config pass ""
          	
          	[ "$enabled" -eq 0 ] && return 1
          	
          	procd_open_instance
          	procd_set_param command $PROG -i "$bind_addr" -p $port
          	
          	if [ -n "$user" ] && [ -n "$pass" ]; then
          		procd_append_param command -u "$user"
          		procd_append_param command -P "$pass"
          	fi
          	
          	procd_set_param respawn
          	procd_set_param stdout 1
          	procd_set_param stderr 1
          	procd_close_instance
          }

          stop_service() {
          	killall microsocks
          }
          EOF
          
          chmod +x openwrt-sdk/package/microsocks/files/microsocks.init

      - name: Create config file
        run: |
          cat > openwrt-sdk/package/microsocks/files/microsocks.config << 'EOF'
          config microsocks 'config'
          	option enabled '0'
          	option port '1080'
          	option bind_addr '0.0.0.0'
          	option user ''
          	option pass ''
          EOF

      - name: Update feeds
        run: |
          cd openwrt-sdk
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Configure SDK
        run: |
          cd openwrt-sdk
          make defconfig

      - name: Build microsocks package
        run: |
          cd openwrt-sdk
          make package/microsocks/compile V=s

      - name: Collect IPK files
        run: |
          mkdir -p artifacts
          find openwrt-sdk/bin -name "microsocks*.ipk" -exec cp {} artifacts/ \;
          echo "=== IPK Files ==="
          ls -lh artifacts/
          echo "=== File Details ==="
          file artifacts/*.ipk || echo "No IPK files found"

      - name: Upload IPK artifact
        uses: actions/upload-artifact@v3
        with:
          name: microsocks-ipk-mt7621
          path: artifacts/*.ipk
          if-no-files-found: error

      - name: Generate build info
        run: |
          cd openwrt-sdk
          echo "### Build Information" > ../build-info.txt
          echo "" >> ../build-info.txt
          echo "- **Date**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> ../build-info.txt
          echo "- **SDK**: OpenWrt Chaos Calmer 15.05.1" >> ../build-info.txt
          echo "- **Target**: ramips/mt7621" >> ../build-info.txt
          echo "- **Commit**: ${{ github.sha }}" >> ../build-info.txt
          echo "- **Repository**: ${{ github.repository }}" >> ../build-info.txt
          echo "" >> ../build-info.txt
          echo "### Package Contents" >> ../build-info.txt
          echo "" >> ../build-info.txt
          echo "- Microsocks SOCKS5 proxy server" >> ../build-info.txt
          echo "- Init script for automatic startup" >> ../build-info.txt
          echo "- Configuration file (/etc/config/microsocks)" >> ../build-info.txt
          echo "" >> ../build-info.txt
          echo "### Installation" >> ../build-info.txt
          echo "" >> ../build-info.txt
          echo '```bash' >> ../build-info.txt
          echo "# Upload IPK to your router and install:" >> ../build-info.txt
          echo "opkg install microsocks*.ipk" >> ../build-info.txt
          echo "" >> ../build-info.txt
          echo "# Edit configuration:" >> ../build-info.txt
          echo "vi /etc/config/microsocks" >> ../build-info.txt
          echo "" >> ../build-info.txt
          echo "# Enable and start service:" >> ../build-info.txt
          echo "/etc/init.d/microsocks enable" >> ../build-info.txt
          echo "/etc/init.d/microsocks start" >> ../build-info.txt
          echo '```' >> ../build-info.txt

      - name: Create Release
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build-${{ github.run_number }}
          name: Microsocks IPK Build ${{ github.run_number }}
          body_path: build-info.txt
          files: artifacts/*.ipk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
